#base() {
  .html() {
    box-sizing: border-box;
    cursor: default;
    text-size-adjust: 100%;
    -webkit-font-smoothing: antialiased;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }

  .body() {
    #common.text-base();
    #common.box-base();
    font-family: @font-family-primary;
    overflow-y: scroll;
    overflow-x: hidden;
    min-width: 320px;
    font-display: swap;
    margin: 0;
  }

  .h1() {
    font-size: var(--font-size-h1);
    line-height: var(--line-height-h1);
    font-family: @font-family-secondary;
    font-weight: bold;
  }

  .h2() {
    font-size: var(--font-size-h2);
    line-height: var(--line-height-h2);
    font-family: @font-family-secondary;
    font-weight: bold;
  }

  .h3() {
    font-size: var(--font-size-h3);
    line-height: var(--line-height-h3);
    font-family: @font-family-secondary;
    font-weight: bold;
  }

  .a() {
    text-decoration: none;

    &:not([href]),
    &[href^="tel"] {
      color: inherit !important;
      cursor: inherit;
    }

    &[href^="tel"] {
      white-space: nowrap;
    }
  }

  .button() {
    cursor: pointer;
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
    color: inherit;
    padding: initial;
    border: initial;
    background-color: initial;
    vertical-align: middle;
    margin: 0;
  }

  .media() {
    max-width: 100%;
    height: auto;
    display: block;

    a &:only-child {
      vertical-align: top;
    }
  }

  .svg() {
    transform: translateZ(0);
    fill: currentColor;
  }

  .hr() {
    border: 0;
    height: 1px;
    background-color: @color-base-divider;
    margin-top: initial;
    margin-bottom: initial;
  }

  .link() {
    cursor: pointer;
    transition-duration: @animation-duration;
    transition-timing-function: @animation-timing-function;
    transition-property+: color, fill;
  }

  .link(@color-base: @color-accent-primary; @color-hover: inherit) {
    color: @color-base;

    body:not(.mobile) &:hover {
      color: if(@color-hover = inherit, #common.set-color-hover(@color-base)[], @color-hover);
    }
  }

  .btn() {
    #common.text-base();
    position: relative;
    display: inline-flex;
    align-items: center;
    padding: ~"calc(@{indent-half} - 1px)" ~"calc(@{indent-base} * 1.5 - 1px)";
    min-height: @line-height-base + @indent-base;
    border-radius: $min-height / 2;
    justify-content: center;
    white-space: nowrap;
    border-width: 1px;
    border-style: solid;
    transition-duration: @animation-duration;
    transition-timing-function: @animation-timing-function;
    transition-property+: box-shadow, border-color, background-color;

    &:not([disabled]):focus {
      outline: none;
    }

    &:active {
      top: 1px;
    }
  }

  .btn(@tone-base: @color-accent-primary; @color-base: contrast; @border-base: transparent; @tone-hover: inherit; @color-hover: inherit; @border-hover: inherit) {
    background-color: @tone-base;
    color: if(@color-base = contrast, contrast(@tone-base, @color-dark-primary, @color-light-primary), @color-base);
    border-color: if(@border-base = transparent, transparent, @border-base);

    &:not([disabled]):focus {
      box-shadow: 0 0 0 2px fadeout(@tone-base, 50%, relative);
    }

    body:not(.mobile) &:not([disabled]):hover {
      background-color: if(@tone-hover = inherit, #common.set-color-hover(@tone-base)[], @tone-hover);
      color: if(@color-hover = inherit, contrast(@tone-base, @color-dark-primary, @color-light-primary), @color-hover);
      border-color: if(@border-hover = inherit, #common.set-color-hover(@border-base)[], @border-hover);
    }
  }
}
